@model FountainCourtResidents.Models.ViewModels.TenantDashboardVM
@{
    ViewBag.Title = "Tenant Dashboard";
    var za = new System.Globalization.CultureInfo("en-ZA");
}

<h2 class="mb-3">Welcome, @Model.FullName</h2>

<!-- Notices -->
@if (Model.Notices != null && Model.Notices.Count > 0)
{
    <div class="alert alert-info" role="alert">
        <strong>Notices</strong>
        <ul class="mb-0">
            @foreach (var n in Model.Notices)
            {
                <li>@n</li>
            }
        </ul>
    </div>
}

@if (TempData["ok"] != null)
{
    <div class="alert alert-success">@TempData["ok"]</div>
}

<div class="row">
    <!-- Lease & Rent summary -->
    <div class="col-lg-7 mb-3">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h5 class="card-title mb-1">Your Lease</h5>
                        <div class="text-muted" style="font-size:.9rem;">
                            @if (!string.IsNullOrWhiteSpace(Model.UnitType) || !string.IsNullOrWhiteSpace(Model.UnitNumber))
                            {
                                <div>
                                    <strong>Unit:</strong>
                                    @Model.UnitType
                                    @if (!string.IsNullOrWhiteSpace(Model.UnitNumber))
                                    {<text> — @Model.UnitNumber</text>}
                                    @if (Model.SquareMeters.HasValue)
                                    {<text> — @Model.SquareMeters m²</text>}
                                </div>
                            }
                            else
                            {
                                <div><em>No unit assigned</em></div>
                            }
                        </div>

                    </div>
                    @if (Model.PricePerMonth.HasValue)
                    {
                        <span class="badge badge-light" style="font-size:1rem;">
                            R @Model.PricePerMonth.Value.ToString("N2", za)/mo
                        </span>
                    }
                </div>

                <hr />

                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <div class="text-muted">Next due</div>
                        <div class="h5 mb-0">@Model.Rent.NextDueLabel</div>
                    </div>
                    <div>
                        @* We’ll wire this to Payments/Start later *@
                        <a class="btn btn-primary"
                           href="@Url.Action("Start","Payments", new { applicationId = Model.Rent.ApplicationId, year = Model.Rent.NextDueYear, month = Model.Rent.NextDueMonth })">
                            Pay rent for @Model.Rent.NextDueLabel
                        </a>
                    </div>
                </div>

                @if (Model.Rent.IsPaidForCurrentMonth)
                {
                    <div class="mt-2 text-success">
                        <span class="oi oi-check" aria-hidden="true"></span>
                        Payment recorded for @Model.Rent.NextDueLabel.
                    </div>
                }
            </div>
        </div>

        <!-- Recent history -->
        <div class="card mt-3 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Recent Payments</h5>
                @if (Model.RecentPayments == null || Model.RecentPayments.Count == 0)
                {
                    <div class="text-muted">No payments yet.</div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-sm mb-0">
                            <thead>
                                <tr>
                                    <th>Period</th>
                                    <th>Status</th>
                                    <th>Amount</th>
                                    <th>When</th>
                                    <th>Ref</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var p in Model.RecentPayments)
                                {
                                    <tr>
                                        <td>@p.Period</td>
                                        <td>
                                            <span class="badge @(p.Status == "Paid"
                       ? "bg-success text-white"
                       : p.Status == "Pending"
                         ? "bg-warning text-dark"
                         : "bg-secondary text-white")">
                                                @p.Status
                                            </span>
                                        </td>
                                        <td>R @p.Amount.ToString("N2", za)</td>
                                        <td>@(p.CompletedUtc?.ToLocalTime().ToString("yyyy-MM-dd HH:mm") ?? p.CreatedUtc.ToLocalTime().ToString("yyyy-MM-dd HH:mm"))</td>
                                        <td>@p.Reference</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                <div class="mt-2">
                    @Html.ActionLink("Requst Rent History Email", "EmailRentHistory", "Tenant", null, new { @class = "btn btn-link p-0" })
                </div>

            </div>
        </div>
    </div>

    <!-- Maintenance -->
    <div class="col-lg-5 mb-3">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Maintenance</h5>
                <div class="d-flex justify-content-between">
                    <div>
                        <div class="text-muted">Open</div>
                        <div class="h5 mb-0">@Model.Maintenance.OpenCount</div>
                    </div>
                    <div>
                        <div class="text-muted">In Progress</div>
                        <div class="h5 mb-0">@Model.Maintenance.InProgressCount</div>
                    </div>
                    <div>
                        <div class="text-muted">Closed</div>
                        <div class="h5 mb-0">@Model.Maintenance.ClosedCount</div>
                    </div>
                </div>

                <div class="mt-3">
                    @Html.ActionLink("Report an issue", "Maintenance", "Tenant", null, new { @class = "btn btn-outline-primary btn-sm" })
                    @Html.ActionLink("View all requests", "Maintenance", "Tenant", null, new { @class = "btn btn-link btn-sm" })
                </div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/open-iconic/1.1.1/font/css/open-iconic-bootstrap.min.css"
      integrity="sha512-D9rl8j3Y0e+u1x5dB1G1aJJKSUEN2k3y7rj9g0B8JGi1hI1QG+E5VdM2Yb2gXG4oYxJQ0v8mW1Hjgx2CwO80rQ=="
      crossorigin="anonymous" referrerpolicy="no-referrer" />

<style>
/* =========================================
   Tenant Dashboard – non-destructive polish
   (scoped to elements used in this view)
   ========================================= */

/* Headline rhythm */
h2.mb-3{ margin-bottom:.75rem !important; }

/* Notices */
.alert.alert-info{
  border:1px solid #dbeafe;
  background: linear-gradient(180deg,#eff6ff, #ffffff);
  color:#1e3a8a;
  border-radius:12px;
  box-shadow:0 8px 20px rgba(30,58,138,.08);
}
.alert.alert-info strong{ font-weight:800; }
.alert.alert-success{
  border-radius:12px;
}

/* Card polish (both columns) */
.card{
  border:1px solid #eef2f7;
  border-radius:14px;
}
.card.shadow-sm:hover{
  box-shadow:0 16px 36px rgba(31,42,55,.08);
  transform:translateY(-1px);
  transition:transform .12s ease, box-shadow .12s ease;
}
.card-title{ font-weight:700; color:#1f2a37; }

/* Lease header */
.badge.badge-light{
  border:1px solid #e5e7eb;
  border-radius:999px;
  padding:.35em .7em;
  font-weight:700;
  color:#111827;
  background:#fff;
}

/* CTA – Pay rent */
a.btn.btn-primary{
  background: linear-gradient(180deg,#0f81c7 0%, #0a6fab 100%);
  border:1px solid #0a6fab;
  border-radius:10px;
  font-weight:800;
  padding:10px 16px;
  display:inline-flex;
  align-items:center;
  gap:8px;
}
a.btn.btn-primary::after{
  content:"";
  width:18px; height:18px; background: currentColor;
  -webkit-mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h12m0 0-5-5m5 5-5 5" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>') no-repeat center/contain;
          mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h12m0 0-5-5m5 5-5 5" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>') no-repeat center/contain;
  transform:translateX(0);
  transition:transform .18s ease;
}
a.btn.btn-primary:hover::after{ transform:translateX(3px); }

/* “Paid” confirmation row */
.oi.oi-check{ margin-right:.25rem; }
.text-success{ color:#16a34a !important; }

/* Recent Payments table */
.table-responsive{ border-radius:10px; overflow:hidden; }
.table.table-sm{
  background:#fff;
  border:1px solid #eef2f7;
}
.table thead th{
  background:#f8fafc;
  border-bottom:1px solid #eef2f7;
  color:#1f2a37;
  font-weight:700;
  vertical-align:middle;
}
.table td, .table th{
  vertical-align:middle;
  font-variant-numeric: tabular-nums;
}
.table tbody tr:hover{ background:#fafcff; }

/* Payment status badges (keep your classes) */
.badge.bg-success.text-white{ background-color:#16a34a !important; }
.badge.bg-warning.text-dark{ background-color:#f59e0b !important; color:#111827 !important; }
.badge.bg-secondary.text-white{ background-color:#94a3b8 !important; }

/* Rent history link */
a.btn.btn-link.p-0{
  color:#0f81c7;
  font-weight:600;
  text-decoration:none;
}
a.btn.btn-link.p-0:hover{ text-decoration:underline; }

/* Right column – Maintenance mini counters */
.col-lg-5 .card .d-flex.justify-content-between > div{
  background:#ffffff;
  border:1px solid #eef2f7;
  border-radius:12px;
  padding:10px 12px;
  box-shadow:0 8px 20px rgba(31,42,55,.06);
  min-width: 108px;
  text-align:center;
}
.col-lg-5 .card .text-muted{ color:#6b7280 !important; }
.col-lg-5 .card .h5.mb-0{
  font-weight:800;
  color:#111827;
}

/* Buttons under maintenance */
.btn.btn-outline-primary.btn-sm{
  border-radius:10px;
  font-weight:700;
  color:#0f81c7;
  border-color:#0f81c7;
}
.btn.btn-link.btn-sm{
  color:#0a6fab;
  font-weight:600;
  text-decoration:none;
}
.btn.btn-link.btn-sm:hover{ text-decoration:underline; }

/* Small screens */
@@media (max-width:576px){
  .col-lg-5 .card .d-flex.justify-content-between{
    gap:10px;
  }
}
</style>
